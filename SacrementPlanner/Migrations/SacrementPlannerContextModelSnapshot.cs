// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SacrementPlanner.Data;

namespace SacrementPlanner.Migrations
{
    [DbContext(typeof(SacrementPlannerContext))]
    partial class SacrementPlannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacrementPlanner.Models.Members", b =>
                {
                    b.Property<int>("MembersId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MembersName");

                    b.HasKey("MembersId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("SacrementPlanner.Models.SacrementMeetings", b =>
                {
                    b.Property<int>("SacrementMeetingsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClosingPrayer");

                    b.Property<string>("ConductingLeader");

                    b.Property<DateTime>("Date");

                    b.Property<string>("IntermediateHymn");

                    b.Property<int>("MembersId");

                    b.Property<string>("OpenignSong");

                    b.Property<string>("OpeningPrayer");

                    b.Property<string>("SpeakerTopic");

                    b.HasKey("SacrementMeetingsId");

                    b.HasIndex("MembersId");

                    b.ToTable("SacrementMeetings");
                });

            modelBuilder.Entity("SacrementPlanner.Models.SacrementMeetings", b =>
                {
                    b.HasOne("SacrementPlanner.Models.Members", "Members")
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
